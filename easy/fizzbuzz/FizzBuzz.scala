/**
 * CHALLENGE DESCRIPTION:
 *
 * Players generally sit in a circle. The player designated to go first says the
 * number "1", and each player thenceforth counts one number in turn. However,
 * any number divisible by 'A' e.g. three is replaced by the word fizz and any
 * divisible by 'B' e.g. five by the word buzz. Numbers divisible by both become
 * fizz buzz. A player who hesitates or makes a mistake is either eliminated.
 *
 * Write a program that prints out the the pattern generated by such a scenario
 * given the values of 'A'/'B' and 'N' which are read from an input text file.
 * The input text file contains three space delimited numbers i.e. A, B, N. The
 * program should then print out the final series of numbers using 'F' for fizz,
 * 'B' for 'buzz' and 'FB' for fizz buzz.
 *
 * INPUT SAMPLE:
 *
 * Your program should accept a file as its first argument. The file contains
 * multiple separated lines; each line contains 3 numbers that are space
 * delimited. The first number is the first divider (X), the second number is
 * the second divider (Y), and the third number is how far you should count (N).
 * You may assume that the input file is formatted correctly and the numbers are
 * valid positive integers.
 *
 * For example:
 *
 * 3 5 10
 * 2 7 15
 *
 * OUTPUT SAMPLE:
 *
 * Print out the series 1 through N replacing numbers divisible by X with “F”,
 * numbers divisible by Y with “B” and numbers divisible by both with “FB”.
 * Since the input file contains multiple sets of values, your output should
 * print out one line per set. Ensure that there are no trailing empty spaces in
 * each line you print.
 *
 * 1 2 F 4 B F 7 8 F B
 * 1 F 3 F 5 F B F 9 F 11 F 13 FB 15
 *
 * CONSTRAINTS:
 *
 * The number of test cases ≤ 20
 * "X" is in range [1, 20]
 * "Y" is in range [1, 20]
 * "N" is in range [21, 100]
 */
object Main extends App {
  val source = io.Source.fromFile(args(0))
  val lines = source.getLines.filter{ _.nonEmpty }

  for (line <- lines) {
    val Array(a, b, n) = line.split(' ').map{ _.toInt }
    val outputLine = fizzBuzz(a, b, n)
    Console.println(outputLine)
  }

  final val Fizz = "F"
  final val Buzz = "B"

  def fizzBuzz(a: Int, b: Int, n: Int): String = {
    (for (i <- 1 to n) yield {
      var out = ""
      if (divisibleBy(i, a)) out += Fizz
      if (divisibleBy(i, b)) out += Buzz
      if (out.nonEmpty) out else i.toString
    }).mkString(" ")
  }

  def divisibleBy(i: Int, d: Int): Boolean = i % d == 0
}
