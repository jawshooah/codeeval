/**
 * Players generally sit in a circle. The player designated to go first says the
 * number "1", and each player thenceforth counts one number in turn. However,
 * any number divisible by 'A' e.g. three is replaced by the word fizz and any
 * divisible by 'B' e.g. five by the word buzz. Numbers divisible by both become
 * fizz buzz. A player who hesitates or makes a mistake is either eliminated.
 *
 * Write a program that prints out the the pattern generated by such a scenario
 * given the values of 'A'/'B' and 'N' which are read from an input text file.
 * The input text file contains three space delimited numbers i.e. A, B, N. The
 * program should then print out the final series of numbers using 'F' for fizz,
 * 'B' for 'buzz' and 'FB' for fizz buzz.
 */
object Main extends App {
  val source = io.Source.fromFile(args(0))
  val lines = source.getLines.filter{ _.nonEmpty }

  for (line <- lines) {
    val Array(a, b, n) = line.split(' ').map{ _.toInt }
    val outputLine = fizzBuzz(a, b, n)
    Console.println(outputLine)
  }

  def fizzBuzz(a: Int, b: Int, n: Int): String = {
    (for (i <- 1 to n) yield {
      var out = ""
      if (divisibleBy(i, a)) out += "F"
      if (divisibleBy(i, b)) out += "B"
      if (out.nonEmpty) out else i.toString
    }).mkString(" ")
  }

  def divisibleBy(i: Int, d: Int): Boolean = i % d == 0
}
